// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using agendaback.Data;

#nullable disable

namespace agendaback.Migrations
{
    [DbContext(typeof(ContextDBAgenda))]
    partial class ContextDBAgendaModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("agendaback.Model.Agenda.TicketAgenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date_criete")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Editable")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GLPI")
                        .HasColumnType("int");

                    b.Property<int>("Locations_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Solve_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Ticket_EntitieName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ticket_description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Ticket_id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("User_id_agenda")
                        .HasColumnType("int");

                    b.Property<int>("User_id_glpi")
                        .HasColumnType("int");

                    b.Property<string>("User_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("agenda_tickets");
                });

            modelBuilder.Entity("agendaback.Model.Agenda.UserAgenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdGLPISistemas")
                        .HasColumnType("int");

                    b.Property<int>("IdGLPITI")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("longblob");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("agenda_user");
                });
#pragma warning restore 612, 618
        }
    }
}
